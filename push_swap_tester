#! /bin/bash


echo " ____            _       ____                       _____         _            "
echo "|  _ \\ _   _ ___| |__   / ___|_      ____ _ _ __   |_   _|__  ___| |_ ___ _ __ "
echo "| |_) | | | / __| '_ \\  \\___ \\ \\ /\\ / / _\` | '_ \\    | |/ _ \\/ __| __/ _ \\ '__|"
echo "|  __/| |_| \\__ \\ | | |  ___) \\ V  V / (_| | |_) |   | |  __/\\__ \\ ||  __/ |   "
echo "|_|    \\__,_|___/_| |_| |____/ \\_/\\_/ \\__,_| .__/    |_|\\___||___/\\__\\___|_|   "
echo "                                           |_|                                 "
  
  
  

read -p "How many numbers to generate ? " SIZE
read -p "How many tests ? " NB_TEST

min_move=1000000
max_move=0
tot_move=0

for (( i=1; i<=$NB_TEST; i++))
do

	ARG=$(python -c "import random ; print(*random.sample(range(-10000,10000),"$SIZE"), sep=' ')")

#read -p "Do you want to show args ? [y/n] " YN
#
#if [ $YN = "y" ]
#then
#	echo "arguments = " $ARG
#fi

	./push_swap $ARG > op.txt
	move=$(cat ./op.txt | wc -l)
	
	tot_move=$(($tot_move + $move))
	
	if [ $move -lt $min_move ]
	then
		min_move=$move
	fi
	
	if [ $move -gt $max_move ]
	then
		max_move=$move
	fi
	
	checker=$(	./checker_linux $ARG < op.txt)	
	#echo "Number of move : " $move "("$checker")"

done

average=$(echo "scale=2 ; 1.0 * $tot_move / $NB_TEST" | bc -l)

echo "Minimum of move : " $min_move
echo "Maximum of move : " $max_move
echo "Average of move : " $average

rm ./op.txt
